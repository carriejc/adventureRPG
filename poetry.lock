[[package]]
name = "dearpygui"
version = "1.6.2"
description = "DearPyGui: A simple Python GUI Toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "debugpy"
version = "1.6.3"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "docstring-to-markdown"
version = "0.12"
description = "On the fly conversion of Python docstrings to markdown"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "hupper"
version = "1.12"
description = "Integrated process monitor for developing and reloading daemons."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["watchdog", "setuptools", "sphinx", "pylons-sphinx-themes"]
testing = ["watchdog", "pytest", "pytest-cov", "mock"]

[[package]]
name = "jedi"
version = "0.18.1"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.0,<0.9.0"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["Django (<3.1)", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "markupsafe"
version = "2.1.2"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["docopt", "pytest (<6.0.0)"]

[[package]]
name = "pastedeploy"
version = "3.0.1"
description = "Load, configure, and compose WSGI applications and servers"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["Sphinx (>=1.7.5)", "pylons-sphinx-themes"]
paste = ["paste"]
testing = ["paste", "pytest", "pytest-cov"]

[[package]]
name = "plaster"
version = "1.1.2"
description = "A loader interface around multiple config file formats."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "pylons-sphinx-themes"]
testing = ["pytest", "pytest-cov"]

[[package]]
name = "plaster-pastedeploy"
version = "1.0.1"
description = "A loader implementing the PasteDeploy syntax to be used by plaster."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
PasteDeploy = ">=2.0"
plaster = ">=0.5"

[package.extras]
testing = ["pytest", "pytest-cov"]

[[package]]
name = "player"
version = "0.6.1"
description = "Pyramid view layers"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pyramid = ">=1.4"
pyramid_jinja2 = "*"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "pyflakes"
version = "3.0.1"
description = "passive checker of Python programs"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pygame"
version = "2.1.2"
description = "Python Game Development"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "dev"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyramid"
version = "2.0.1"
description = "The Pyramid Web Framework, a Pylons project"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
hupper = ">=1.5"
plaster = "*"
plaster-pastedeploy = "*"
translationstring = ">=0.4"
venusian = ">=1.0"
webob = ">=1.8.3"
"zope.deprecation" = ">=3.5.0"
"zope.interface" = ">=3.8.0"

[package.extras]
docs = ["Sphinx (>=3.0.0)", "docutils", "pylons-sphinx-themes (>=1.0.8)", "pylons-sphinx-latesturl", "repoze.sphinx.autointerface", "sphinx-copybutton", "sphinxcontrib-autoprogram"]
testing = ["webtest (>=1.3.1)", "zope.component (>=4.0)", "coverage", "pytest (>=5.4.2)", "pytest-cov"]

[[package]]
name = "pyramid-jinja2"
version = "2.10"
description = "Jinja2 template bindings for the Pyramid web framework"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
jinja2 = ">=2.5.0,<2.11.0 || >2.11.0,<2.11.1 || >2.11.1,<2.11.2 || >2.11.2"
markupsafe = "*"
pyramid = ">=1.3.0"
"zope.deprecation" = "*"

[package.extras]
docs = ["pylons-sphinx-themes (>=0.3)", "sphinx (>=1.7.5)"]
testing = ["webtest", "coverage", "pytest (>=5.4.2)", "pytest-cov"]

[[package]]
name = "python-lsp-jsonrpc"
version = "1.0.0"
description = "JSON RPC 2.0 server library"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ujson = ">=3.0.0"

[package.extras]
test = ["pylint", "pycodestyle", "pyflakes", "pytest", "pytest-cov", "coverage"]

[[package]]
name = "python-lsp-server"
version = "1.7.2"
description = "Python Language Server for the Language Server Protocol"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
docstring-to-markdown = "*"
jedi = ">=0.17.2,<0.19.0"
pluggy = ">=1.0.0"
pyflakes = {version = ">=2.5.0,<3.1.0", optional = true, markers = "extra == \"pyflakes\""}
python-lsp-jsonrpc = ">=1.0.0"
rope = {version = ">1.2.0", optional = true, markers = "extra == \"rope\""}
toml = {version = "*", optional = true, markers = "extra == \"yapf\""}
ujson = ">=3.0.0"
whatthepatch = {version = ">=1.0.2,<2.0.0", optional = true, markers = "extra == \"yapf\""}
yapf = {version = "<=0.32.0", optional = true, markers = "extra == \"yapf\""}

[package.extras]
all = ["autopep8 (>=1.6.0,<2.1.0)", "flake8 (>=5.0.0,<7)", "mccabe (>=0.7.0,<0.8.0)", "pycodestyle (>=2.9.0,<2.11.0)", "pydocstyle (>=6.3.0,<6.4.0)", "pyflakes (>=2.5.0,<3.1.0)", "pylint (>=2.5.0,<3)", "rope (>1.2.0)", "yapf (<=0.32.0)", "toml", "whatthepatch (>=1.0.2,<2.0.0)"]
autopep8 = ["autopep8 (>=1.6.0,<2.1.0)"]
flake8 = ["flake8 (>=5.0.0,<7)"]
mccabe = ["mccabe (>=0.7.0,<0.8.0)"]
pycodestyle = ["pycodestyle (>=2.9.0,<2.11.0)"]
pydocstyle = ["pydocstyle (>=6.3.0,<6.4.0)"]
pyflakes = ["pyflakes (>=2.5.0,<3.1.0)"]
pylint = ["pylint (>=2.5.0,<3)"]
rope = ["rope (>1.2.0)"]
test = ["pylint (>=2.5.0,<3)", "pytest", "pytest-cov", "coverage", "numpy", "pandas", "matplotlib", "pyqt5", "flaky"]
websockets = ["websockets (>=10.3)"]
yapf = ["yapf (<=0.32.0)", "whatthepatch (>=1.0.2,<2.0.0)", "toml"]

[[package]]
name = "pytoolconfig"
version = "1.2.2"
description = "Python tool configuration"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = ">=21.3"
tomli = {version = ">=2.0", markers = "python_version < \"3.11\""}

[package.extras]
doc = ["tabulate (>=0.8.9)", "sphinx (>=4.5.0)"]
gen_docs = ["sphinx (>=4.5.0)", "sphinx-autodoc-typehints (>=1.18.1)", "sphinx-rtd-theme (>=1.0.0)", "pytoolconfig"]
global = ["appdirs (>=1.4.4)"]
validation = ["pydantic (>=1.7.4)"]

[[package]]
name = "rope"
version = "1.3.0"
description = "a python refactoring library..."
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pytoolconfig = ">=1.1.2"

[package.extras]
dev = ["pytest (>=7.0.1)", "pytest-timeout (>=2.1.0)", "build (>=0.7.0)"]
doc = ["pytoolconfig", "sphinx (>=4.5.0)", "sphinx-autodoc-typehints (>=1.18.1)", "sphinx-rtd-theme (>=1.0.0)"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "dev"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "translationstring"
version = "1.4"
description = "Utility library for i18n relied on by various Repoze and Pyramid packages"
category = "main"
optional = false
python-versions = "*"

[package.extras]
docs = ["Sphinx (>=1.3.1)", "docutils", "pylons-sphinx-themes"]

[[package]]
name = "ujson"
version = "5.4.0"
description = "Ultra fast JSON encoder and decoder for Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[[package]]
name = "venusian"
version = "3.0.0"
description = "A library for deferring decorator actions"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
docs = ["sphinx", "repoze.sphinx.autointerface"]
testing = ["pytest", "pytest-cov", "coverage"]

[[package]]
name = "webob"
version = "1.8.7"
description = "WSGI request and response object"
category = "main"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"

[package.extras]
docs = ["Sphinx (>=1.7.5)", "pylons-sphinx-themes"]
testing = ["pytest (>=3.1.0)", "coverage", "pytest-cov", "pytest-xdist"]

[[package]]
name = "whatthepatch"
version = "1.0.2"
description = "A patch parsing and application library."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "yapf"
version = "0.32.0"
description = "A formatter for Python code."
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "zope.deprecation"
version = "5.0"
description = "Zope Deprecation Infrastructure"
category = "main"
optional = false
python-versions = ">= 3.7"

[package.extras]
docs = ["sphinx"]
test = ["zope.testrunner"]

[[package]]
name = "zope.interface"
version = "6.0"
description = "Interfaces for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "repoze.sphinx.autointerface"]
test = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]
testing = ["coverage (>=5.0.3)", "zope.event", "zope.testing"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.8.0,<3.9"
content-hash = "b4b414ba83a5817fe5b50b867625c67d3875c8c0f54597d1012d17f5205ce365"

[metadata.files]
dearpygui = []
debugpy = []
docstring-to-markdown = []
hupper = []
jedi = []
jinja2 = []
markupsafe = []
packaging = []
parso = []
pastedeploy = []
plaster = []
plaster-pastedeploy = []
player = []
pluggy = []
pyflakes = []
pygame = []
pyparsing = []
pyramid = []
pyramid-jinja2 = []
python-lsp-jsonrpc = []
python-lsp-server = []
pytoolconfig = []
rope = []
toml = []
tomli = []
translationstring = []
ujson = []
venusian = []
webob = []
whatthepatch = []
yapf = []
"zope.deprecation" = []
"zope.interface" = []
